class DBHelper{static DATABASE_URL(e="restaurants",t=1337){return`http://localhost:${t}/${e}`}static fetchFromServer(e,t="restaurants"){const r=DBHelper.DATABASE_URL(t);fetch(r).then(t=>{if(200===t.status)return t.json();{const r=`Request failed. Returned status of ${t.status}`;e(r,null)}}).then(t=>e(null,t))}static fetchRestaurantById(e,t){DBHelper.fetchFromServer((r,l)=>{if(r)t(r,null);else{const r=l.find(t=>t.id==e);r?t(null,r):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchFromServer((r,l)=>{if(r)t(r,null);else{const r=l.filter(t=>t.cuisine_type==e);t(null,r)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchFromServer((r,l)=>{if(r)t(r,null);else{const r=l.filter(t=>t.neighborhood==e);t(null,r)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,r){DBHelper.fetchFromServer((l,n)=>{if(l)r(l,null);else{let l=n;"all"!=e&&(l=l.filter(t=>t.cuisine_type==e)),"all"!=t&&(l=l.filter(e=>e.neighborhood==t)),r(null,l)}})}static fetchNeighborhoods(e){DBHelper.fetchFromServer((t,r)=>{if(t)e(t,null);else{const t=r.map((e,t)=>r[t].neighborhood),l=t.filter((e,r)=>t.indexOf(e)==r);e(null,l)}})}static fetchCuisines(e){DBHelper.fetchFromServer((t,r)=>{if(t)e(t,null);else{const t=r.map((e,t)=>r[t].cuisine_type),l=t.filter((e,r)=>t.indexOf(e)==r);e(null,l)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph}_300w.webp`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}